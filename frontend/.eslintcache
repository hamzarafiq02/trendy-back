[{"/home/sunny/Desktop/trendyshop/frontend/src/index.js":"1","/home/sunny/Desktop/trendyshop/frontend/src/reportWebVitals.js":"2","/home/sunny/Desktop/trendyshop/frontend/src/store.js":"3","/home/sunny/Desktop/trendyshop/frontend/src/App.js":"4","/home/sunny/Desktop/trendyshop/frontend/src/reducers/cartReducers.js":"5","/home/sunny/Desktop/trendyshop/frontend/src/reducers/orderReducers.js":"6","/home/sunny/Desktop/trendyshop/frontend/src/screens/HomeScreen.js":"7","/home/sunny/Desktop/trendyshop/frontend/src/components/Header.js":"8","/home/sunny/Desktop/trendyshop/frontend/src/reducers/productReducers.js":"9","/home/sunny/Desktop/trendyshop/frontend/src/reducers/userReducers.js":"10","/home/sunny/Desktop/trendyshop/frontend/src/screens/LoginScreen.js":"11","/home/sunny/Desktop/trendyshop/frontend/src/screens/CartScreen.js":"12","/home/sunny/Desktop/trendyshop/frontend/src/components/Footer.js":"13","/home/sunny/Desktop/trendyshop/frontend/src/screens/ShippingScreen.js":"14","/home/sunny/Desktop/trendyshop/frontend/src/screens/PaymentScreen.js":"15","/home/sunny/Desktop/trendyshop/frontend/src/screens/ProductScreen.js":"16","/home/sunny/Desktop/trendyshop/frontend/src/screens/PlaceOrderScreen.js":"17","/home/sunny/Desktop/trendyshop/frontend/src/screens/ProfileScreen.js":"18","/home/sunny/Desktop/trendyshop/frontend/src/screens/UserListScreen.js":"19","/home/sunny/Desktop/trendyshop/frontend/src/screens/UserEditScreen.js":"20","/home/sunny/Desktop/trendyshop/frontend/src/screens/ProductEditScreen.js":"21","/home/sunny/Desktop/trendyshop/frontend/src/screens/ProductListScreen.js":"22","/home/sunny/Desktop/trendyshop/frontend/src/screens/Allproduct.js":"23","/home/sunny/Desktop/trendyshop/frontend/src/screens/ProductRe.js":"24","/home/sunny/Desktop/trendyshop/frontend/src/screens/ContactUs.js":"25","/home/sunny/Desktop/trendyshop/frontend/src/screens/OrderScreen.js":"26","/home/sunny/Desktop/trendyshop/frontend/src/screens/RegisterScreen.js":"27","/home/sunny/Desktop/trendyshop/frontend/src/screens/OrderListScreen.js":"28","/home/sunny/Desktop/trendyshop/frontend/src/components/Loader.js":"29","/home/sunny/Desktop/trendyshop/frontend/src/components/Product.js":"30","/home/sunny/Desktop/trendyshop/frontend/src/components/Message.js":"31","/home/sunny/Desktop/trendyshop/frontend/src/components/Paginate.js":"32","/home/sunny/Desktop/trendyshop/frontend/src/components/SearchBox.js":"33","/home/sunny/Desktop/trendyshop/frontend/src/components/FormContainer.js":"34","/home/sunny/Desktop/trendyshop/frontend/src/components/Review.js":"35","/home/sunny/Desktop/trendyshop/frontend/src/components/CheckoutSteps.js":"36","/home/sunny/Desktop/trendyshop/frontend/src/components/ProductCarousel.js":"37","/home/sunny/Desktop/trendyshop/frontend/src/constants/cartConstants.js":"38","/home/sunny/Desktop/trendyshop/frontend/src/constants/orderConstants.js":"39","/home/sunny/Desktop/trendyshop/frontend/src/constants/productConstants.js":"40","/home/sunny/Desktop/trendyshop/frontend/src/constants/userConstants.js":"41","/home/sunny/Desktop/trendyshop/frontend/src/actions/cartActions.js":"42","/home/sunny/Desktop/trendyshop/frontend/src/actions/productActions.js":"43","/home/sunny/Desktop/trendyshop/frontend/src/actions/userActions.js":"44","/home/sunny/Desktop/trendyshop/frontend/src/components/Rating.js":"45","/home/sunny/Desktop/trendyshop/frontend/src/actions/orderActions.js":"46"},{"size":594,"mtime":1616789579000,"results":"47","hashOfConfig":"48"},{"size":362,"mtime":1616789579000,"results":"49","hashOfConfig":"48"},{"size":2417,"mtime":1616789579000,"results":"50","hashOfConfig":"48"},{"size":2506,"mtime":1662905615671,"results":"51","hashOfConfig":"48"},{"size":1486,"mtime":1616789579000,"results":"52","hashOfConfig":"48"},{"size":4079,"mtime":1616789579000,"results":"53","hashOfConfig":"48"},{"size":1553,"mtime":1661758323743,"results":"54","hashOfConfig":"48"},{"size":3548,"mtime":1662926421333,"results":"55","hashOfConfig":"48"},{"size":4080,"mtime":1616789579000,"results":"56","hashOfConfig":"48"},{"size":3926,"mtime":1616789579000,"results":"57","hashOfConfig":"48"},{"size":2549,"mtime":1616789579000,"results":"58","hashOfConfig":"48"},{"size":4579,"mtime":1662734477945,"results":"59","hashOfConfig":"48"},{"size":7115,"mtime":1662924469968,"results":"60","hashOfConfig":"48"},{"size":3176,"mtime":1616789579000,"results":"61","hashOfConfig":"48"},{"size":1705,"mtime":1616789579000,"results":"62","hashOfConfig":"48"},{"size":12129,"mtime":1662926238641,"results":"63","hashOfConfig":"48"},{"size":6496,"mtime":1662734884941,"results":"64","hashOfConfig":"48"},{"size":6776,"mtime":1661686720632,"results":"65","hashOfConfig":"48"},{"size":3511,"mtime":1616789579000,"results":"66","hashOfConfig":"48"},{"size":3912,"mtime":1616789579000,"results":"67","hashOfConfig":"48"},{"size":7920,"mtime":1662887642898,"results":"68","hashOfConfig":"48"},{"size":5140,"mtime":1662047351846,"results":"69","hashOfConfig":"48"},{"size":1174,"mtime":1661759313266,"results":"70","hashOfConfig":"48"},{"size":0,"mtime":1662905538863,"results":"71","hashOfConfig":"48"},{"size":3624,"mtime":1662925460315,"results":"72","hashOfConfig":"48"},{"size":9915,"mtime":1661687105993,"results":"73","hashOfConfig":"48"},{"size":3922,"mtime":1616789579000,"results":"74","hashOfConfig":"48"},{"size":3543,"mtime":1661686165687,"results":"75","hashOfConfig":"48"},{"size":458,"mtime":1616789579000,"results":"76","hashOfConfig":"48"},{"size":1165,"mtime":1661757756411,"results":"77","hashOfConfig":"48"},{"size":228,"mtime":1616789579000,"results":"78","hashOfConfig":"48"},{"size":859,"mtime":1616789579000,"results":"79","hashOfConfig":"48"},{"size":1037,"mtime":1661685573087,"results":"80","hashOfConfig":"48"},{"size":378,"mtime":1616789579000,"results":"81","hashOfConfig":"48"},{"size":1943,"mtime":1662735264736,"results":"82","hashOfConfig":"48"},{"size":1593,"mtime":1616789579000,"results":"83","hashOfConfig":"48"},{"size":2545,"mtime":1661837782290,"results":"84","hashOfConfig":"48"},{"size":287,"mtime":1616789579000,"results":"85","hashOfConfig":"48"},{"size":1240,"mtime":1616789579000,"results":"86","hashOfConfig":"48"},{"size":1502,"mtime":1616789579000,"results":"87","hashOfConfig":"48"},{"size":1479,"mtime":1616789579000,"results":"88","hashOfConfig":"48"},{"size":1310,"mtime":1616789579000,"results":"89","hashOfConfig":"48"},{"size":5930,"mtime":1662893719008,"results":"90","hashOfConfig":"48"},{"size":7370,"mtime":1616789579000,"results":"91","hashOfConfig":"48"},{"size":1886,"mtime":1616789579000,"results":"92","hashOfConfig":"48"},{"size":6009,"mtime":1616789579000,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uwik3f",{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205"},"/home/sunny/Desktop/trendyshop/frontend/src/index.js",[],"/home/sunny/Desktop/trendyshop/frontend/src/reportWebVitals.js",[],"/home/sunny/Desktop/trendyshop/frontend/src/store.js",[],"/home/sunny/Desktop/trendyshop/frontend/src/App.js",[],"/home/sunny/Desktop/trendyshop/frontend/src/reducers/cartReducers.js",[],"/home/sunny/Desktop/trendyshop/frontend/src/reducers/orderReducers.js",[],"/home/sunny/Desktop/trendyshop/frontend/src/screens/HomeScreen.js",["206"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\nimport { listProducts } from '../actions/productActions'\n\n\nfunction HomeScreen({ history }) {\n    const dispatch = useDispatch()\n    const productList = useSelector(state => state.productList)\n    const { error, loading, products, page, pages } = productList\n\n    let keyword = history.location.search\n\n    useEffect(() => {\n        dispatch(listProducts(keyword))\n\n    }, [dispatch, keyword])\n\n    return (\n        <div>\n            {!keyword && <ProductCarousel />}\n\n            <h1>Latest Products</h1>\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                    :\n                    <div>\n                        <Row>\n                            {products.map(product => (\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                                    <Product product={product} />\n                                </Col>\n                            ))}\n                        </Row>\n                        <Paginate page={page} pages={pages} keyword={keyword} />\n                    </div>\n            }\n        </div>\n    )\n}\n\nexport default HomeScreen\n","/home/sunny/Desktop/trendyshop/frontend/src/components/Header.js",["207"],"import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport SearchBox from './SearchBox'\nimport { logout } from '../actions/userActions'\n\nfunction Header() {\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const dispatch = useDispatch()\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n    return (\n        <header className=''>\n            <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to='/'>\n                        {/* <Navbar.Brand className='text-dark'>Trendy</Navbar.Brand> */}\n                        <img alt=\"logo\" src=\"\\images\\logo.png\" width=\"80px\" />\n\n                    </LinkContainer>\n\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <SearchBox />\n                        <Nav className=\"ml-auto text-danger\">\n\n                            <LinkContainer to='/cart'>\n                                <Nav.Link ><i className=\"fas fa-shopping-cart text-dark\" style={{ color: '#4e84c4' }}></i>Cart</Nav.Link>\n                            </LinkContainer>\n                            <LinkContainer to='/allproduct'>\n                                <Nav.Link ><i className=\"\"></i>All Product</Nav.Link>\n                            </LinkContainer>\n                            <LinkContainer to='/contactus'>\n                                <Nav.Link ><i className=\"\"></i>Contact Us</Nav.Link>\n                            </LinkContainer>\n\n\n                            {userInfo ? (\n                                <NavDropdown title={userInfo.name} id='username'>\n                                    <LinkContainer to='/profile'>\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n\n                                </NavDropdown>\n                            ) : (\n                                <LinkContainer to='/login'>\n                                    <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\n                                </LinkContainer>\n                            )}\n\n\n                            {userInfo && userInfo.isAdmin && (\n                                <NavDropdown title='Admin' id='adminmenue'>\n                                    <LinkContainer to='/admin/userlist'>\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/admin/productlist'>\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/admin/orderlist'>\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                </NavDropdown>\n                            )}\n\n\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","/home/sunny/Desktop/trendyshop/frontend/src/reducers/productReducers.js",[],"/home/sunny/Desktop/trendyshop/frontend/src/reducers/userReducers.js",[],"/home/sunny/Desktop/trendyshop/frontend/src/screens/LoginScreen.js",[],"/home/sunny/Desktop/trendyshop/frontend/src/screens/CartScreen.js",[],"/home/sunny/Desktop/trendyshop/frontend/src/components/Footer.js",["208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226"],"import React from 'react'\n\n\n\nfunction Footer() {\n    return (\n        <div>\n            <footer class=\"footer-section\">\n                <div class=\"container\">\n                    <div class=\"footer-cta pt-5 pb-5\">\n                        <div class=\"row\">\n                            <div class=\"col-xl-4 col-md-4 mb-30\">\n                                <div class=\"single-cta\">\n                                    <i class=\"fas fa-map-marker-alt\"></i>\n                                    <div class=\"cta-text\">\n                                        <h4>Find us</h4>\n                                        <span>Near ChaseUp, Chungi No 6, Multan</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-xl-4 col-md-4 mb-30\">\n                                <div class=\"single-cta\">\n                                    <i class=\"fas fa-phone\"></i>\n                                    <div class=\"cta-text\">\n                                        <h4>Call us</h4>\n                                        <span>+92 311 7227 333</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-xl-4 col-md-4 mb-30\">\n                                <div class=\"single-cta\">\n                                    <i class=\"far fa-envelope-open\"></i>\n                                    <div class=\"cta-text\">\n                                        <h4>Mail us</h4>\n                                        <span>trendy@info.com</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"footer-content pt-5 pb-5\">\n                        <div class=\"row\">\n                            <div class=\"col-xl-4 col-lg-4 mb-50\">\n                                <div class=\"footer-widget\">\n                                    <div class=\"footer-logo\">\n                                        <a href=\"index.html\"><img src=\"\\images\\logo.png\" class=\"img-fluid\" alt=\"logo\" /></a>\n                                    </div>\n                                    <div class=\"footer-text\">\n                                        <p>Lorem ipsum dolor sit amet, consec tetur adipisicing elit, sed do eiusmod tempor incididuntut consec tetur adipisicing\n                                            elit,Lorem ipsum dolor sit amet.</p>\n                                    </div>\n                                    <div class=\"footer-social-icon\">\n                                        <span>Follow us</span>\n                                        <a href=\"#\"><i class=\"fab fa-facebook-f facebook-bg\"></i></a>\n                                        <a href=\"#\"><i class=\"fab fa-twitter twitter-bg\"></i></a>\n                                        <a href=\"#\"><i class=\"fab fa-google-plus-g google-bg\"></i></a>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-xl-4 col-lg-4 col-md-6 mb-30\">\n                                <div class=\"footer-widget\">\n                                    <div class=\"footer-widget-heading\">\n                                        <h3>Useful Links</h3>\n                                    </div>\n                                    <ul>\n                                        <li><a href=\"#\">Home</a></li>\n                                        <li><a href=\"#\">about</a></li>\n                                        <li><a href=\"#\">services</a></li>\n                                        <li><a href=\"#\">portfolio</a></li>\n                                        <li><a href=\"#\">Contact</a></li>\n                                        <li><a href=\"#\">About us</a></li>\n                                        <li><a href=\"#\">Our Services</a></li>\n                                        <li><a href=\"#\">Expert Team</a></li>\n                                        <li><a href=\"#\">Contact us</a></li>\n                                        <li><a href=\"#\">Latest News</a></li>\n                                    </ul>\n                                </div>\n                            </div>\n                            <div class=\"col-xl-4 col-lg-4 col-md-6 mb-50\">\n                                <div class=\"footer-widget\">\n                                    <div class=\"footer-widget-heading\">\n                                        <h3>Contact Us</h3>\n                                    </div>\n                                    <div class=\"footer-text mb-25\">\n                                        <p>Don’t miss to subscribe to our new feeds, kindly fill the form below.</p>\n                                    </div>\n                                    <div class=\"subscribe-form\">\n                                        <form action=\"#\">\n                                            <input type=\"text\" placeholder=\"Email Address\" />\n                                            <button><i class=\"fab fa-telegram-plane\"></i></button>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"copyright-area\">\n                    <div class=\"container\">\n                        <div class=\"row\">\n                            <div class=\"col-xl-6 col-lg-6 text-center text-lg-left\">\n                                <div class=\"copyright-text\">\n                                    <p>Copyright &copy; 2022, All Right Reserved <a href=\"#\">Trendy</a></p>\n                                </div>\n                            </div>\n                            <div class=\"col-xl-6 col-lg-6 d-none d-lg-block text-right\">\n                                <div class=\"footer-menu\">\n                                    <ul>\n                                        <li><a href=\"#\">Home</a></li>\n                                        <li><a href=\"#\">Terms</a></li>\n                                        <li><a href=\"#\">Privacy</a></li>\n                                        <li><a href=\"#\">Policy</a></li>\n                                        <li><a href=\"#\">Contact</a></li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </footer>\n        </div>\n    )\n}\n\nexport default Footer\n\n// import React from 'react'\n// import { Row, Col } from 'react-bootstrap'\n\n// function Footer() {\n//     return (\n//         <footer>\n//             <Row>\n//                 <Col className=\"bg-light text-dark text-center py-3\">Copyright &copy; By Hamza Rafiq</Col>\n//             </Row>\n//         </footer>\n//     )\n// }\n\n// export default Footer\n","/home/sunny/Desktop/trendyshop/frontend/src/screens/ShippingScreen.js",["227"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nfunction ShippingScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        history.push('/payment')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter address'\n                        value={address ? address : ''}\n                        onChange={(e) => setAddress(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter city'\n                        value={city ? city : ''}\n                        onChange={(e) => setCity(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter postal code'\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter country'\n                        value={country ? country : ''}\n                        onChange={(e) => setCountry(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n","/home/sunny/Desktop/trendyshop/frontend/src/screens/PaymentScreen.js",["228"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nfunction PaymentScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    if (!shippingAddress.address) {\n        history.push('/shipping')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='PayPal or Credit Card'\n                            id='paypal'\n                            name='paymentMethod'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        >\n\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n","/home/sunny/Desktop/trendyshop/frontend/src/screens/ProductScreen.js",["229","230","231"],"import React, { useState, useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Review from '../components/Review';\n\nimport axios from 'axios';\nimport {\n    Row,\n    Col,\n    Image,\n    ListGroup,\n    Button,\n    Card,\n    Form,\n} from 'react-bootstrap';\nimport Rating from '../components/Rating';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport {\n    listProductDetails,\n    createProductReview,\n} from '../actions/productActions';\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\n\nfunction ProductScreen({ match, history }) {\n\n\n\n\n    const [qty, setQty] = useState(1);\n    const [rating, setRating] = useState(0);\n    const [comment, setComment] = useState('');\n    const [sentement, setSentement] = useState([]);\n    const [pid, setPid] = useState('')\n\n    const dispatch = useDispatch();\n\n    const productDetails = useSelector((state) => state.productDetails);\n    console.log(productDetails)\n    const { loading, error, product } = productDetails;\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n\n\n\n\n    const productReviewCreate = useSelector((state) => state.productReviewCreate);\n    const {\n        loading: loadingProductReview,\n        error: errorProductReview,\n        success: successProductReview,\n    } = productReviewCreate;\n\n    useEffect(() => {\n        if (successProductReview) {\n            setRating(0);\n            setComment('');\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\n        }\n\n        dispatch(listProductDetails(match.params.id));\n    }, [dispatch, match, successProductReview]);\n\n    const addToCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`);\n    };\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(\n            createProductReview(match.params.id, {\n                rating,\n                comment,\n            })\n        );\n    };\n\n\n\n    const handleSent = async (id) => {\n        try {\n            const { data } = await axios.get(`/api/products/sent/${id}`)\n            console.log(data)\n            setSentement(data.sentement)\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    useEffect(() => {\n        const id = history.location.pathname.split('/')[2]\n        setPid(id)\n        pid && sentement && handleSent(pid)\n    }, [pid])\n\n\n\n    return (\n        <div>\n\n            <Link to=\"/\" className=\"btn btn-light my-3\">\n                Go Back\n            </Link>\n            {loading ? (\n                <Loader />\n            ) : error ? (\n                <Message variant=\"danger\">{error}</Message>\n            ) : (\n                <div>\n                    <Row>\n                        <Col md={5}>\n                            <Image src={product.image} alt={product.name} fluid />\n                        </Col>\n\n                        <Col md={4} className='shadow-lg p-3 mb-5 bg-white rounded'>\n                            <ListGroup variant=\"flush\">\n                                <ListGroup.Item>\n                                    <h3>{product.name}</h3>\n                                </ListGroup.Item>\n                                <ListGroup.Item>Brand: {product.brand}</ListGroup.Item>\n                                <ListGroup.Item>Category: {product.category}</ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <Rating\n                                        value={product.rating}\n                                        text={`${product.numReviews} reviews`}\n                                        color={'#f8e825'}\n                                    />\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>Price: Rs {product.price}</ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    Description: {product.description}\n                                </ListGroup.Item>\n                            </ListGroup>\n                        </Col>\n\n                        <Col md={3} classname='shadow-lg p-3 mb-5 bg-white rounded'>\n                            <Card>\n                                <ListGroup variant=\"flush\">\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Price:</Col>\n                                            <Col>\n                                                <strong>Rs {product.price}</strong>\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Status:</Col>\n                                            <Col>\n                                                {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    {product.countInStock > 0 && (\n                                        <ListGroup.Item>\n                                            <Row>\n                                                <Col>Qty</Col>\n                                                <Col xs=\"auto\" className=\"my-1\">\n                                                    <Form.Control\n                                                        as=\"select\"\n                                                        value={qty}\n                                                        onChange={(e) => setQty(e.target.value)}\n                                                    >\n                                                        {[...Array(product.countInStock).keys()].map(\n                                                            (x) => (\n                                                                <option key={x + 1} value={x + 1}>\n                                                                    {x + 1}\n                                                                </option>\n                                                            )\n                                                        )}\n                                                    </Form.Control>\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    )}\n\n                                    <ListGroup.Item>\n                                        <Button\n                                            onClick={addToCartHandler}\n                                            className=\"btn-block\"\n                                            disabled={product.countInStock == 0}\n                                            type=\"button\"\n                                        >\n                                            Add to Cart\n                                        </Button>\n                                    </ListGroup.Item>\n                                </ListGroup>\n                            </Card>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col md={6}>\n                            <h4>Reviews</h4>\n                            {product.reviews.length === 0 && (\n                                <Message variant=\"info\">No Reviews</Message>\n                            )}\n\n                            <ListGroup variant=\"flush\">\n                                {product.reviews.map((review) => (\n                                    <ListGroup.Item key={review._id}>\n                                        <strong>{review.name}</strong>\n                                        <Rating value={review.rating} color=\"#f8e825\" />\n                                        <p>{review.createdAt.substring(0, 10)}</p>\n                                        <p>{review.comment}</p>\n                                    </ListGroup.Item>\n                                ))}\n\n                                <ListGroup.Item>\n                                    <h4>Write a review</h4>\n\n                                    {loadingProductReview && <Loader />}\n                                    {successProductReview && (\n                                        <Message variant=\"success\">Review Submitted</Message>\n                                    )}\n                                    {errorProductReview && (\n                                        <Message variant=\"danger\">{errorProductReview}</Message>\n                                    )}\n\n                                    {userInfo ? (\n                                        <Form onSubmit={submitHandler}>\n                                            <Form.Group controlId=\"rating\">\n                                                <Form.Label>Rating</Form.Label>\n                                                <Form.Control\n                                                    as=\"select\"\n                                                    value={rating}\n                                                    onChange={(e) => setRating(e.target.value)}\n                                                >\n                                                    <option value=\"\">Select...</option>\n                                                    <option value=\"1\">1 - Poor</option>\n                                                    <option value=\"2\">2 - Fair</option>\n                                                    <option value=\"3\">3 - Good</option>\n                                                    <option value=\"4\">4 - Very Good</option>\n                                                    <option value=\"5\">5 - Excellent</option>\n                                                </Form.Control>\n                                            </Form.Group>\n\n                                            <Form.Group controlId=\"comment\">\n                                                <Form.Label>Review</Form.Label>\n                                                <Form.Control\n                                                    as=\"textarea\"\n                                                    row=\"5\"\n                                                    value={comment}\n                                                    onChange={(e) => setComment(e.target.value)}\n                                                ></Form.Control>\n                                            </Form.Group>\n\n                                            <Button\n                                                disabled={loadingProductReview}\n                                                type=\"submit\"\n                                                variant=\"primary\"\n                                            >\n                                                Submit\n                                            </Button>\n                                        </Form>\n                                    ) : (\n                                        <Message variant=\"info\">\n                                            Please <Link to=\"/login\">login</Link> to write a review\n                                        </Message>\n                                    )}\n                                </ListGroup.Item>\n                            </ListGroup>\n                        </Col>\n                        <Col md={6}>\n                            <h4>Reviews Analyzer</h4>\n                            <ListGroup.Item>\n                                <Review sentement={sentement} />\n                            </ListGroup.Item>\n\n                        </Col>\n                    </Row>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ProductScreen;\n","/home/sunny/Desktop/trendyshop/frontend/src/screens/PlaceOrderScreen.js",["232","233"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\nfunction PlaceOrderScreen({ history }) {\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, error, success } = orderCreate\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\n\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n\n    if (!cart.paymentMethod) {\n        history.push('/payment')\n    }\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n    }, [success, history])\n\n    const placeOrder = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n        }))\n    }\n\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n\n                            <p>\n                                <strong>Shipping: </strong>\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\n                                {'  '}\n                                {cart.shippingAddress.postalCode},\n                                {'  '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\n                                Your cart is empty\n                            </Message> : (\n                                <ListGroup variant='flush'>\n                                    {cart.cartItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={1}>\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\n                                                </Col>\n\n                                                <Col>\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                </Col>\n\n                                                <Col md={4}>\n                                                    {item.qty} X Rs {item.price} = Rs {(item.qty * item.price).toFixed(2)}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                            )}\n                        </ListGroup.Item>\n\n                    </ListGroup>\n\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items:</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping:</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax:</Col>\n                                    <Col>${cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total:</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Button\n                                    type='button'\n                                    className='btn-block'\n                                    disabled={cart.cartItems === 0}\n                                    onClick={placeOrder}\n                                >\n                                    Place Order\n                                </Button>\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default PlaceOrderScreen\n","/home/sunny/Desktop/trendyshop/frontend/src/screens/ProfileScreen.js",["234","235"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport { listMyOrders } from '../actions/orderActions'\n\nfunction ProfileScreen({ history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name || success || userInfo._id !== user._id) {\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({\n                'id': user._id,\n                'name': name,\n                'email': email,\n                'password': password\n            }))\n            setMessage('')\n        }\n\n    }\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            required\n                            type='name'\n                            placeholder='Enter name'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            required\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Enter Password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='passwordConfirm'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Confirm Password'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary'>\n                        Update\n                </Button>\n\n                </Form>\n            </Col>\n\n            <Col md={9}>\n                <h2>My Orders</h2>\n                {loadingOrders ? (\n                    <Loader />\n                ) : errorOrders ? (\n                    <Message variant='danger'>{errorOrders}</Message>\n                ) : (\n                            <Table striped responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>Date</th>\n                                        <th>Total</th>\n                                        <th>Paid</th>\n                                        <th>Delivered</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {orders.map(order => (\n                                        <tr key={order._id}>\n                                            <td>{order._id}</td>\n                                            <td>{order.createdAt.substring(0, 10)}</td>\n                                            <td>Rs {order.totalPrice}</td>\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                            )}</td>\n                                            <td>\n                                                <LinkContainer to={`/order/${order._id}`}>\n                                                    <Button className='btn-sm'>Details</Button>\n                                                </LinkContainer>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                        )}\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen","/home/sunny/Desktop/trendyshop/frontend/src/screens/UserListScreen.js",["236"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <div>\n            <h1>Users</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default UserListScreen\n","/home/sunny/Desktop/trendyshop/frontend/src/screens/UserEditScreen.js",["237"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen({ match, history }) {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userlist')\n        } else {\n\n            if (!user.name || user._id !== Number(userId)) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Enter Email'\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='isadmin'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Is Admin'\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default UserEditScreen","/home/sunny/Desktop/trendyshop/frontend/src/screens/ProductEditScreen.js",[],"/home/sunny/Desktop/trendyshop/frontend/src/screens/ProductListScreen.js",["238"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nfunction ProductListScreen({ history, match }) {\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products, pages, page } = productList\n\n    const productDelete = useSelector(state => state.productDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n\n    const productCreate = useSelector(state => state.productCreate)\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    let keyword = history.location.search\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET })\n\n        if (!userInfo.isAdmin) {\n            history.push('/login')\n        }\n\n        if (successCreate) {\n            history.push(`/admin/product/${createdProduct._id}/edit`)\n        } else {\n            dispatch(listProducts(keyword))\n        }\n\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this product?')) {\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    const createProductHandler = () => {\n        dispatch(createProduct())\n    }\n\n    return (\n        <div>\n            <Row className='align-items-center'>\n                <Col>\n                    <h1>Products</h1>\n                </Col>\n\n                <Col className='text-right'>\n                    <Button className='my-3' onClick={createProductHandler}>\n                        <i className='fas fa-plus'></i> Create Product\n                    </Button>\n                </Col>\n            </Row>\n\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <div>\n                            <Table striped bordered hover responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>NAME</th>\n                                        <th>STOCK</th>\n                                        <th>PRICE</th>\n                                        <th>CATEGORY</th>\n                                        <th>BRAND</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {products.map(product => (\n                                        <tr key={product._id}>\n                                            <td>{product._id}</td>\n                                            <td>{product.name}</td>\n                                            <td>{product.countInStock}</td>\n                                            <td>Rs {product.price}</td>\n                                            <td>{product.category}</td>\n                                            <td>{product.brand}</td>\n\n                                            <td>\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                                    <Button variant='light' className='btn-sm'>\n                                                        <i className='fas fa-edit'></i>\n                                                    </Button>\n                                                </LinkContainer>\n\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\n                                                    <i className='fas fa-trash'></i>\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                            <Paginate pages={pages} page={page} isAdmin={true} />\n                        </div>\n                    )}\n        </div>\n    )\n}\n\nexport default ProductListScreen","/home/sunny/Desktop/trendyshop/frontend/src/screens/Allproduct.js",["239"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\nfunction Allproduct(history) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const {  products, page, pages } = productList\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n  return (\r\n    <div>\r\n        <h1>All Product</h1>\r\n                        <Row>\r\n                            {products.map(product => (\r\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                    <Product product={product} />\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                        <Paginate page={page} pages={pages} keyword={keyword} />\r\n                    </div>\r\n  )\r\n}\r\n\r\nexport default Allproduct","/home/sunny/Desktop/trendyshop/frontend/src/screens/ProductRe.js",[],"/home/sunny/Desktop/trendyshop/frontend/src/screens/ContactUs.js",["240"],"import React from 'react'\r\n\r\nfunction ContactUs() {\r\n    return (\r\n        <div>\r\n            <section class=\"mb-4\">\r\n\r\n                <h1>Contact us</h1>\r\n                <p class=\"text-center w-responsive mx-auto mb-5\">Do you have any questions? Please do not hesitate to contact us directly. Our team will come back to you within\r\n                    a matter of hours to help you.</p>\r\n\r\n                <div class=\"row\">\r\n\r\n                    <div class=\"col-md-9 mb-md-0 mb-5\">\r\n                        <form id=\"contact-form\" name=\"contact-form\" action=\"mail.php\" method=\"POST\">\r\n\r\n                            <div class=\"row\">\r\n\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"md-form mb-0\">\r\n                                        <input type=\"text\" id=\"name\" name=\"name\" class=\"form-control\" />\r\n                                        <label for=\"name\" class=\"\">Your name</label>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"md-form mb-0\">\r\n                                        <input type=\"text\" id=\"email\" name=\"email\" class=\"form-control\" />\r\n                                        <label for=\"email\" class=\"\">Your email</label>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12\">\r\n                                    <div class=\"md-form mb-0\">\r\n                                        <input type=\"text\" id=\"subject\" name=\"subject\" class=\"form-control\" />\r\n                                        <label for=\"subject\" class=\"\">Subject</label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n\r\n                                <div class=\"col-md-12\">\r\n\r\n                                    <div class=\"md-form\">\r\n                                        <textarea type=\"text\" id=\"message\" name=\"message\" rows=\"2\" class=\"form-control md-textarea\"></textarea>\r\n                                        <label for=\"message\">Your message</label>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </form>\r\n\r\n                        <div class=\"text-center text-md-left\">\r\n                            <a class=\"btn btn-primary\" onclick=\"document.getElementById('contact-form').submit();\">Send</a>\r\n                        </div>\r\n                        <div class=\"status\"></div>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"col-md-3 text-center\">\r\n                        <ul class=\"list-unstyled mb-0\">\r\n                            <li><i class=\"fas fa-map-marker-alt fa-2x\"></i>\r\n                                <p>Near ChaseUp, Chungi No 6, Multan</p>\r\n                            </li>\r\n\r\n                            <li><i class=\"fas fa-phone mt-4 fa-2x\"></i>\r\n                                <p>+92 311 7227 333</p>\r\n                            </li>\r\n\r\n                            <li><i class=\"fas fa-envelope mt-4 fa-2x\"></i>\r\n                                <p>trendy@info.com</p>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactUs","/home/sunny/Desktop/trendyshop/frontend/src/screens/OrderScreen.js",["241"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nfunction OrderScreen({ match, history }) {\n    const orderId = match.params.id\n    const dispatch = useDispatch()\n\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, error, loading } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    if (!loading && !error) {\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    }\n\n\n    const addPayPalScript = () => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AeDXja18CkwFUkL-HQPySbzZsiTrN52cG13mf9Yz7KiV2vNnGfTDP0wDEN9sGlhZHrbb_USawcJzVDgn'\n        script.async = true\n        script.onload = () => {\n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n\n    useEffect(() => {\n\n        if (!userInfo) {\n            history.push('/login')\n        }\n\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, order, orderId, successPay, successDeliver])\n\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n                <div>\n                    <h1>Order: {order.Id}</h1>\n                    <Row>\n                        <Col md={8}>\n                            <ListGroup variant='flush'>\n                                <ListGroup.Item>\n                                    <h2>Shipping</h2>\n                                    <p><strong>Name: </strong> {order.user.name}</p>\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n                                    <p>\n                                        <strong>Shipping: </strong>\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\n                                        {'  '}\n                                        {order.shippingAddress.postalCode},\n                                {'  '}\n                                        {order.shippingAddress.country}\n                                    </p>\n\n                                    {order.isDelivered ? (\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Not Delivered</Message>\n                                        )}\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Payment Method</h2>\n                                    <p>\n                                        <strong>Method: </strong>\n                                        {order.paymentMethod}\n                                    </p>\n                                    {order.isPaid ? (\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Not Paid</Message>\n                                        )}\n\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Order Items</h2>\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\n                                        Order is empty\n                            </Message> : (\n                                            <ListGroup variant='flush'>\n                                                {order.orderItems.map((item, index) => (\n                                                    <ListGroup.Item key={index}>\n                                                        <Row>\n                                                            <Col md={1}>\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\n                                                            </Col>\n\n                                                            <Col>\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                            </Col>\n\n                                                            <Col md={4}>\n                                                                {item.qty} X Rs {item.price} = Rs {(item.qty * item.price).toFixed(2)}\n                                                            </Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n                                                ))}\n                                            </ListGroup>\n                                        )}\n                                </ListGroup.Item>\n\n                            </ListGroup>\n\n                        </Col>\n\n                        <Col md={4}>\n                            <Card>\n                                <ListGroup variant='flush'>\n                                    <ListGroup.Item>\n                                        <h2>Order Summary</h2>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Items:</Col>\n                                            <Col>Rs {order.itemsPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Shipping:</Col>\n                                            <Col>Rs {order.shippingPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Tax:</Col>\n                                            <Col>Rs {order.taxPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Total:</Col>\n                                            <Col>Rs {order.totalPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n\n                                    {!order.isPaid && (\n                                        <ListGroup.Item>\n                                            {loadingPay && <Loader />}\n\n                                            {!sdkReady ? (\n                                                <Loader />\n                                            ) : (\n                                                    <PayPalButton\n                                                        amount={order.totalPrice}\n                                                        onSuccess={successPaymentHandler}\n                                                    />\n                                                )}\n                                        </ListGroup.Item>\n                                    )}\n                                </ListGroup>\n                                {loadingDeliver && <Loader />}\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                                    <ListGroup.Item>\n                                        <Button\n                                            type='button'\n                                            className='btn btn-block'\n                                            onClick={deliverHandler}\n                                        >\n                                            Mark As Delivered\n                                        </Button>\n                                    </ListGroup.Item>\n                                )}\n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n            )\n}\n\nexport default OrderScreen\n","/home/sunny/Desktop/trendyshop/frontend/src/screens/RegisterScreen.js",["242"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nfunction RegisterScreen({ location, history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { error, loading, userInfo } = userRegister\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(name, email, password))\n        }\n\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='Enter name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='passwordConfirm'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Confirm Password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Have an Account? <Link\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                        Sign In\n                        </Link>\n                </Col>\n            </Row>\n        </FormContainer >\n    )\n}\n\nexport default RegisterScreen\n","/home/sunny/Desktop/trendyshop/frontend/src/screens/OrderListScreen.js",["243"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listOrders } from '../actions/orderActions'\n\nfunction OrderListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const orderList = useSelector(state => state.orderList)\n    const { loading, error, orders } = orderList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listOrders())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, userInfo])\n\n\n    return (\n        <div>\n            <h1>Orders</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>USER</th>\n                                    <th>DATE</th>\n                                    <th>Total</th>\n                                    <th>PAID</th>\n                                    <th>DELIVERED</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {orders.map(order => (\n                                    <tr key={order._id}>\n                                        <td>{order._id}</td>\n                                        <td>{order.user && order.user.name}</td>\n                                        <td>{order.createdAt.substring(0, 10)}</td>\n                                        <td>Rs {order.totalPrice}</td>\n\n                                        <td>{order.isPaid ? (\n                                            order.paidAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        <td>{order.isDelivered ? (\n                                            order.deliveredAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        <td>\n                                            <LinkContainer to={`/order/${order._id}`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    Details\n                                                </Button>\n                                            </LinkContainer>\n\n\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default OrderListScreen","/home/sunny/Desktop/trendyshop/frontend/src/components/Loader.js",[],"/home/sunny/Desktop/trendyshop/frontend/src/components/Product.js",[],"/home/sunny/Desktop/trendyshop/frontend/src/components/Message.js",[],"/home/sunny/Desktop/trendyshop/frontend/src/components/Paginate.js",[],"/home/sunny/Desktop/trendyshop/frontend/src/components/SearchBox.js",[],"/home/sunny/Desktop/trendyshop/frontend/src/components/FormContainer.js",[],"/home/sunny/Desktop/trendyshop/frontend/src/components/Review.js",["244","245"],"import React, { useState, useEffect } from 'react'\r\nimport { PieChart } from 'react-minimal-pie-chart'\r\nimport { Row, Col } from 'react-bootstrap'\r\n\r\n\r\nconst Review = ({ sentement, }) => {\r\n\r\n\r\n\r\n\r\n\r\n    const { pos, neg, neu } = sentement\r\n\r\n    const postiveVal = Math.round(pos)\r\n    const negativeVal = Math.round(neg)\r\n    const nuetralVal = Math.round(neu)\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container flex align-items-center justify-content-center\" >\r\n                <PieChart\r\n                    label={({ dataEntry }) => {\r\n                        if (dataEntry.value !== 0) return `${dataEntry.value}%`\r\n                    }}\r\n                    viewBoxSize={[140, 140]}\r\n                    center={[65, 65]}\r\n                    data={[\r\n                        {\r\n                            color: \"#5ad3d1\",\r\n                            title: \"Postive\",\r\n                            value: postiveVal,\r\n                        },\r\n                        {\r\n                            color: \"#f7464a\",\r\n                            title: \"Negitive\",\r\n                            value: negativeVal,\r\n                        },\r\n                        {\r\n                            color: \"#616774\",\r\n                            title: \"Nutral\",\r\n                            value: nuetralVal,\r\n                        },\r\n                    ]}\r\n                />\r\n                <Row>\r\n                    <Col className='circle1' style={{ backgroundColor: '#5ad3d1', borderRadius: '10px', color: 'black' }}>Positive</Col>\r\n                    <Col className='circle2' style={{ backgroundColor: '#616774', borderRadius: '10px', color: 'white' }}>Nutral</Col>\r\n                    <Col className='circle3' style={{ backgroundColor: '#f7464a', borderRadius: '10px', color: 'black' }}>Negitive</Col>\r\n                </Row>\r\n\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Review","/home/sunny/Desktop/trendyshop/frontend/src/components/CheckoutSteps.js",[],"/home/sunny/Desktop/trendyshop/frontend/src/components/ProductCarousel.js",[],"/home/sunny/Desktop/trendyshop/frontend/src/constants/cartConstants.js",[],"/home/sunny/Desktop/trendyshop/frontend/src/constants/orderConstants.js",[],"/home/sunny/Desktop/trendyshop/frontend/src/constants/productConstants.js",[],"/home/sunny/Desktop/trendyshop/frontend/src/constants/userConstants.js",[],"/home/sunny/Desktop/trendyshop/frontend/src/actions/cartActions.js",[],"/home/sunny/Desktop/trendyshop/frontend/src/actions/productActions.js",["246"],"import axios from 'axios'\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n\n} from '../constants/productConstants'\n\n\nexport const listProducts = (keyword = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(`/api/products${keyword}`)\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get(`/api/products/top/`)\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/products/${id}`)\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/products/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/create/`,\n            {},\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/products/update/${product._id}/`,\n            product,\n            config\n        )\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data,\n        })\n\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/${productId}/reviews/`,\n            review,\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n            payload: data,\n        })\n\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","/home/sunny/Desktop/trendyshop/frontend/src/actions/userActions.js",["247"],"import axios from 'axios'\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n\n} from '../constants/userConstants'\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n}\n\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            { 'name': name, 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/profile/update/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/users/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/update/${user._id}/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","/home/sunny/Desktop/trendyshop/frontend/src/components/Rating.js",[],"/home/sunny/Desktop/trendyshop/frontend/src/actions/orderActions.js",["248","249","250"],"import axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/orders/add/`,\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${id}/pay/`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${order._id}/deliver/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/myorders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}",{"ruleId":"251","severity":1,"message":"252","line":1,"column":17,"nodeType":"253","messageId":"254","endLine":1,"endColumn":25},{"ruleId":"251","severity":1,"message":"255","line":3,"column":34,"nodeType":"253","messageId":"254","endLine":3,"endColumn":37},{"ruleId":"256","severity":1,"message":"257","line":54,"column":41,"nodeType":"258","endLine":54,"endColumn":53},{"ruleId":"256","severity":1,"message":"257","line":55,"column":41,"nodeType":"258","endLine":55,"endColumn":53},{"ruleId":"256","severity":1,"message":"257","line":56,"column":41,"nodeType":"258","endLine":56,"endColumn":53},{"ruleId":"256","severity":1,"message":"257","line":66,"column":45,"nodeType":"258","endLine":66,"endColumn":57},{"ruleId":"256","severity":1,"message":"257","line":67,"column":45,"nodeType":"258","endLine":67,"endColumn":57},{"ruleId":"256","severity":1,"message":"257","line":68,"column":45,"nodeType":"258","endLine":68,"endColumn":57},{"ruleId":"256","severity":1,"message":"257","line":69,"column":45,"nodeType":"258","endLine":69,"endColumn":57},{"ruleId":"256","severity":1,"message":"257","line":70,"column":45,"nodeType":"258","endLine":70,"endColumn":57},{"ruleId":"256","severity":1,"message":"257","line":71,"column":45,"nodeType":"258","endLine":71,"endColumn":57},{"ruleId":"256","severity":1,"message":"257","line":72,"column":45,"nodeType":"258","endLine":72,"endColumn":57},{"ruleId":"256","severity":1,"message":"257","line":73,"column":45,"nodeType":"258","endLine":73,"endColumn":57},{"ruleId":"256","severity":1,"message":"257","line":74,"column":45,"nodeType":"258","endLine":74,"endColumn":57},{"ruleId":"256","severity":1,"message":"257","line":75,"column":45,"nodeType":"258","endLine":75,"endColumn":57},{"ruleId":"256","severity":1,"message":"257","line":103,"column":82,"nodeType":"258","endLine":103,"endColumn":94},{"ruleId":"256","severity":1,"message":"257","line":109,"column":45,"nodeType":"258","endLine":109,"endColumn":57},{"ruleId":"256","severity":1,"message":"257","line":110,"column":45,"nodeType":"258","endLine":110,"endColumn":57},{"ruleId":"256","severity":1,"message":"257","line":111,"column":45,"nodeType":"258","endLine":111,"endColumn":57},{"ruleId":"256","severity":1,"message":"257","line":112,"column":45,"nodeType":"258","endLine":112,"endColumn":57},{"ruleId":"256","severity":1,"message":"257","line":113,"column":45,"nodeType":"258","endLine":113,"endColumn":57},{"ruleId":"251","severity":1,"message":"259","line":1,"column":27,"nodeType":"253","messageId":"254","endLine":1,"endColumn":36},{"ruleId":"251","severity":1,"message":"259","line":1,"column":27,"nodeType":"253","messageId":"254","endLine":1,"endColumn":36},{"ruleId":"251","severity":1,"message":"260","line":1,"column":38,"nodeType":"253","messageId":"254","endLine":1,"endColumn":49},{"ruleId":"261","severity":1,"message":"262","line":96,"column":8,"nodeType":"263","endLine":96,"endColumn":13,"suggestions":"264"},{"ruleId":"265","severity":1,"message":"266","line":188,"column":76,"nodeType":"267","messageId":"268","endLine":188,"endColumn":78},{"ruleId":"251","severity":1,"message":"252","line":1,"column":17,"nodeType":"253","messageId":"254","endLine":1,"endColumn":25},{"ruleId":"261","severity":1,"message":"269","line":35,"column":8,"nodeType":"263","endLine":35,"endColumn":26,"suggestions":"270"},{"ruleId":"251","severity":1,"message":"271","line":2,"column":10,"nodeType":"253","messageId":"254","endLine":2,"endColumn":14},{"ruleId":"265","severity":1,"message":"272","line":53,"column":22,"nodeType":"267","messageId":"268","endLine":53,"endColumn":24},{"ruleId":"251","severity":1,"message":"252","line":1,"column":17,"nodeType":"253","messageId":"254","endLine":1,"endColumn":25},{"ruleId":"261","severity":1,"message":"273","line":43,"column":8,"nodeType":"263","endLine":43,"endColumn":46,"suggestions":"274"},{"ruleId":"251","severity":1,"message":"252","line":1,"column":17,"nodeType":"253","messageId":"254","endLine":1,"endColumn":25},{"ruleId":"251","severity":1,"message":"252","line":1,"column":17,"nodeType":"253","messageId":"254","endLine":1,"endColumn":25},{"ruleId":"256","severity":1,"message":"275","line":59,"column":29,"nodeType":"258","endLine":59,"endColumn":116},{"ruleId":"261","severity":1,"message":"276","line":65,"column":8,"nodeType":"263","endLine":65,"endColumn":62,"suggestions":"277"},{"ruleId":"265","severity":1,"message":"272","line":34,"column":22,"nodeType":"267","messageId":"268","endLine":34,"endColumn":24},{"ruleId":"251","severity":1,"message":"252","line":1,"column":17,"nodeType":"253","messageId":"254","endLine":1,"endColumn":25},{"ruleId":"251","severity":1,"message":"252","line":1,"column":17,"nodeType":"253","messageId":"254","endLine":1,"endColumn":25},{"ruleId":"251","severity":1,"message":"259","line":1,"column":27,"nodeType":"253","messageId":"254","endLine":1,"endColumn":36},{"ruleId":"251","severity":1,"message":"278","line":116,"column":17,"nodeType":"253","messageId":"254","endLine":116,"endColumn":21},{"ruleId":"251","severity":1,"message":"279","line":21,"column":5,"nodeType":"253","messageId":"254","endLine":21,"endColumn":30},{"ruleId":"251","severity":1,"message":"280","line":14,"column":5,"nodeType":"253","messageId":"254","endLine":14,"endColumn":20},{"ruleId":"251","severity":1,"message":"281","line":19,"column":5,"nodeType":"253","messageId":"254","endLine":19,"endColumn":24},{"ruleId":"251","severity":1,"message":"282","line":28,"column":5,"nodeType":"253","messageId":"254","endLine":28,"endColumn":24},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'useCallback' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history.location.pathname' and 'sentement'. Either include them or remove the dependency array.","ArrayExpression",["283"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.",["284"],"'Link' is defined but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["285"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["286"],"'data' is assigned a value but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'ORDER_PAY_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.",{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},"Update the dependencies array to be: [history.location.pathname, pid, sentement]",{"range":"295","text":"296"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"297","text":"298"},"Update the dependencies array to be: [user, userId, successUpdate, history, dispatch]",{"range":"299","text":"300"},"Update the dependencies array to be: [dispatch, order, orderId, successPay, successDeliver, userInfo, history]",{"range":"301","text":"302"},[2492,2497],"[history.location.pathname, pid, sentement]",[1268,1286],"[success, history, order._id, dispatch]",[1432,1470],"[user, userId, successUpdate, history, dispatch]",[2272,2326],"[dispatch, order, orderId, successPay, successDeliver, userInfo, history]"]